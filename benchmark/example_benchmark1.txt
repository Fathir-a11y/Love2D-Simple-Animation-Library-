local love = require("love")
local Animation = require("Animation") -- Make sure Animation.lua is in the same folder

local animations = {}
local numSprites = 500 -- Number of sprites for performance test
local screenWidth, screenHeight
local fpsFont

function love.load()
    screenWidth = love.graphics.getWidth()
    screenHeight = love.graphics.getHeight()
    
    fpsFont = love.graphics.newFont(14)

    -- Create multiple animations
    for i = 1, numSprites do
        local anim = Animation.new("download.png", 32, 32, 0.1, true) -- make sure you have an image named download or you can change it to your image.
        
        -- Random position
        anim.x = math.random(0, screenWidth - 32)
        anim.y = math.random(0, screenHeight - 32)
        
        -- Random speed (pixels per second)
        anim.vx = math.random(-100, 100)
        anim.vy = math.random(-100, 100)
        
        table.insert(animations, anim)
    end
end

function love.update(dt)
    -- Update all animations
    for _, anim in ipairs(animations) do
        anim:update(dt)
        
        -- Update position
        anim.x = anim.x + anim.vx * dt
        anim.y = anim.y + anim.vy * dt
        
        -- Screen bounds check (bouncing)
        if anim.x < 0 then anim.x = 0; anim.vx = -anim.vx end
        if anim.y < 0 then anim.y = 0; anim.vy = -anim.vy end
        if anim.x > screenWidth - 32 then anim.x = screenWidth - 32; anim.vx = -anim.vx end
        if anim.y > screenHeight - 32 then anim.y = screenHeight - 32; anim.vy = -anim.vy end
    end
end

function love.draw()
    love.graphics.setBackgroundColor(0.1, 0.1, 0.1)
    
    -- Draw all animations
    for _, anim in ipairs(animations) do
        anim:draw(anim.x, anim.y)
    end
    
    -- Draw FPS and sprite count
    love.graphics.setFont(fpsFont)
    love.graphics.setColor(1, 1, 1)
    love.graphics.print("FPS: " .. love.timer.getFPS(), 10, 10)
    love.graphics.print("Sprites: " .. #animations, 10, 30)
end
